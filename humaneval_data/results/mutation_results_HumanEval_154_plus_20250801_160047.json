{
  "timestamp": "20250801_160047",
  "test_type": "mutation_testing",
  "metadata": {
    "task_id": "HumanEval/154",
    "timestamp": "20250801_160047",
    "tester_version": "1.0",
    "total_operators_tested": 9,
    "operators_with_errors": 1
  },
  "summary": {
    "original_passes": true,
    "total_mutations": 28,
    "killed_mutations": 25,
    "mutation_score": 0.8928571428571429,
    "survival_rate": 0.1071428571428571
  },
  "detailed_results": {
    "task_id": "HumanEval/154",
    "dataset_type": "plus",
    "original_passes": true,
    "total_mutations": 28,
    "killed_mutations": 25,
    "mutation_score": 0.8928571428571429,
    "mutation_results": {
      "NumberReplacer": {
        "total_mutations": 10,
        "killed_mutations": 9,
        "survival_rate": 0.1,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 2\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 2\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpz3hwcakn.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpz3hwcakn.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpz3hwcakn.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:41.404007",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 0\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 0\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpshasxxia.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpshasxxia.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpshasxxia.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:41.668574",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 2,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 2\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 2\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmppyodx1tc.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmppyodx1tc.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmppyodx1tc.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:42.092080",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 3,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 0\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 0\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmprg5i25jm.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmprg5i25jm.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmprg5i25jm.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:42.548304",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 4,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpg0q7eozp.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpg0q7eozp.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpg0q7eozp.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:42.848753",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 5,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(-1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(-1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": true,
            "execution_output": "All tests passed!\n",
            "timestamp": "2025-08-01T16:00:43.096430",
            "status": "SURVIVED",
            "reason": "tests_passed"
          },
          {
            "mutation_index": 6,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 2\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 2\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmptnqv7x3b.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmptnqv7x3b.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmptnqv7x3b.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:43.293286",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 7,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 0\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 0\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp55du_g73.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp55du_g73.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp55du_g73.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:43.497404",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 8,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return 1",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return 1",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpq78yvg9i.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpq78yvg9i.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpq78yvg9i.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:43.702015",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 9,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return -1",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return -1",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpn2t1qxnk.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpn2t1qxnk.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpn2t1qxnk.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:43.913573",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 10,
        "mutations_tested": 10
      },
      "Add->Sub": {
        "error": "division by zero"
      },
      "Eq->NotEq": {
        "total_mutations": 2,
        "killed_mutations": 2,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a != b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a != b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpr4ecn7hj.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpr4ecn7hj.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpr4ecn7hj.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:44.283226",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b != '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b != '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp849dxd8q.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp849dxd8q.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp849dxd8q.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:44.454310",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 2,
        "mutations_tested": 2
      },
      "Remove ReturnValue": {
        "total_mutations": 4,
        "killed_mutations": 4,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpei6jm944.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpei6jm944.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpei6jm944.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:44.639731",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpbkv_nr9a.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpbkv_nr9a.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpbkv_nr9a.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:44.814459",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 2,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpw7ml6es5.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpw7ml6es5.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpw7ml6es5.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:45.024590",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 3,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpertjmhju.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpertjmhju.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpertjmhju.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:45.230678",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 4,
        "mutations_tested": 4
      },
      "True->False": {
        "total_mutations": 3,
        "killed_mutations": 3,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return False\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return False\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpq9zy64zm.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpq9zy64zm.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpq9zy64zm.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:45.423314",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return False\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return False\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpphgox4t3.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpphgox4t3.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpphgox4t3.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:45.607666",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 2,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return False\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return False\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpvrdtfh2_.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpvrdtfh2_.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpvrdtfh2_.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:45.848053",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 3,
        "mutations_tested": 3
      },
      "False->True": {
        "total_mutations": 1,
        "killed_mutations": 1,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return True",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return True",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp0oq027rl.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp0oq027rl.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp0oq027rl.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:46.108013",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 1,
        "mutations_tested": 1
      },
      "Zero->One": {
        "total_mutations": 2,
        "killed_mutations": 2,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(1, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp31gudi4c.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp31gudi4c.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp31gudi4c.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:46.371924",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return 1",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return 1",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp7sm6poy2.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp7sm6poy2.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp7sm6poy2.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:46.587256",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 2,
        "mutations_tested": 2
      },
      "One->Zero": {
        "total_mutations": 3,
        "killed_mutations": 3,
        "survival_rate": 0.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 0\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return 0\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmph74vf7xf.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmph74vf7xf.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmph74vf7xf.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:46.783000",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 0\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return 0\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp7l9gf09k.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp7l9gf09k.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp7l9gf09k.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:46.995844",
            "status": "KILLED",
            "reason": "test_failure"
          },
          {
            "mutation_index": 2,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 0\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return 0\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmp50u7gq82.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp50u7gq82.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmp50u7gq82.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:47.215263",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 3,
        "mutations_tested": 3
      },
      "String->Empty": {
        "total_mutations": 1,
        "killed_mutations": 0,
        "survival_rate": 1.0,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"\"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"\"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": true,
            "execution_output": "All tests passed!\n",
            "timestamp": "2025-08-01T16:00:47.516513",
            "status": "SURVIVED",
            "reason": "tests_passed"
          }
        ],
        "mutation_count_available": 1,
        "mutations_tested": 1
      },
      "String->X": {
        "total_mutations": 2,
        "killed_mutations": 1,
        "survival_rate": 0.5,
        "detailed_mutations": [
          {
            "mutation_index": 0,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"X\"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"X\"\"\"\n    if a == b:\n        return True\n    if b == '':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": true,
            "execution_output": "All tests passed!\n",
            "timestamp": "2025-08-01T16:00:47.765622",
            "status": "SURVIVED",
            "reason": "tests_passed"
          },
          {
            "mutation_index": 1,
            "original_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
            "mutated_code": "def cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == 'X':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "mutated_complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\ndef cycpattern_check(a, b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n    if a == b:\n        return True\n    if b == 'X':\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False",
            "execution_success": false,
            "execution_output": "Traceback (most recent call last):\n  File \"/tmp/tmpgc_juyfb.py\", line 67, in <module>\n    check(cycpattern_check)\n    ~~~~~^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpgc_juyfb.py\", line 61, in check\n    assertion(candidate(*inp), exp, 0)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/tmp/tmpgc_juyfb.py\", line 54, in assertion\n    assert exact_match\n           ^^^^^^^^^^^\nAssertionError\n",
            "timestamp": "2025-08-01T16:00:47.938051",
            "status": "KILLED",
            "reason": "test_failure"
          }
        ],
        "mutation_count_available": 2,
        "mutations_tested": 2
      }
    },
    "problem_info": {
      "prompt": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n",
      "canonical_solution": "\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n",
      "test_code": "\n\nimport numpy as np\n\ndef is_floats(x) -> bool:\n    # check if it is float; List[float]; Tuple[float]\n    if isinstance(x, float):\n        return True\n    if isinstance(x, (list, tuple)):\n        return all(isinstance(i, float) for i in x)\n    if isinstance(x, np.ndarray):\n        return x.dtype == np.float64 or x.dtype == np.float32\n    return False\n\n\ndef assertion(out, exp, atol):\n    exact_match = out == exp\n\n    if atol == 0 and is_floats(exp):\n        atol = 1e-6\n    if not exact_match and atol != 0:\n        assert np.allclose(out, exp, rtol=1e-07, atol=atol)\n    else:\n        assert exact_match\n\n\ndef check(candidate):\n    inputs = [['xyzw', 'xyw'], ['yello', 'ell'], ['whattup', 'ptut'], ['efef', 'fee'], ['abab', 'aabb'], ['winemtt', 'tinem'], ['hello', 'olelh'], ['abcdefg', 'cde'], ['banana', 'nab'], ['python', 'nthy'], ['onomatopoeia', 'onat'], ['racecar', 'race'], ['mississippi', 'sis'], ['coffee', 'ffeco'], ['programming', 'ammiprogr'], ['anagram', 'margana'], ['mississipi', 'mississipi'], ['scdeis', 'sis'], ['python', 'nythy'], ['marganaa', 'marganaa'], ['anagram', 'anagram'], ['nthny', 'nythny'], ['ntnabhny', 'nthny'], ['nthnyanagram', 'nythny'], ['racanagramecar', 'race'], ['racanagrameca', 'race'], ['banana', 'nthnyanagram'], ['pyammscdeisiprogrthon', 'pyammiprogrthon'], ['mississipi', 'mississipionomatopoeia'], ['missiissippi', 'sis'], ['race', 'race'], ['racanagramecaanagram', 'anagram'], ['mississippi', 'siss'], ['coffee', 'ffolelheco'], ['miffecossissipi', 'miffescossissipi'], ['ntnabhny', 'anagrammiffescossissipi'], ['mississispi', 'mississispi'], ['marganaaffolelheco', 'marganaaffolelheco'], ['mississispi', 'mississispii'], ['abcdefg', 'cmississipionomatopoeiade'], ['bananamissiissippi', 'nthnyanagram'], ['coffeemississpi', 'coffeemississpi'], ['mississispi', 'i'], ['hoeollo', 'olelh'], ['nythy', 'miffecossissipi'], ['onomatopoeia', 'nythy'], ['abcdefdg', 'abcdefg'], ['nthny', 'xbQkq'], ['mnythnyisssissipi', 'mississicdepi'], ['racanagrameca', 'racanagrameeca'], ['racecar', 'marganaamarganaaffolelheco'], ['olelnab', 'olelh'], ['marganaaffolelheico', 'marganaaffolelheico'], ['hoeollo', 'olelolelnabh'], ['sffecocdeis', 'sis'], ['onamississipit', 'onat'], ['racmarganaamarganaaffolelheco', 'rac'], ['onomatopoeia', 'olelh'], ['racanagrameca', 'racanagrameca'], ['b', 'nthnyanagram'], ['marganaamarganaaffolelhe', 'marganaamarganaaffolelheco'], ['xbQkq', 'xbQkq'], ['onmargafolelhecoat', 'onomatopoeia'], ['rac', 'racmarganaamarganaaffolelheco'], ['', ''], ['pyon', 'nythy'], ['nythy', 'anagrammiffescossissipi'], ['scmarganadeis', 'sis'], ['ammiprogr', 'marganaaffolelheco'], ['cdde', 'cde'], ['scmargeanadeis', 'scmarganadeis'], ['pyon', 'nythnythnyy'], ['onomatopoeia', 'onomatopoeia'], ['onat', 'sis'], ['coffeemississpisis', 'sis'], ['onomatopoeia', 'olelhh'], ['abcdefg', 'cmississispide'], ['siss', 'iscracecardeis'], ['ntnabhny', 'nthbananany'], ['siolelhhs', 'siolelhhs'], ['onamississipit', 'onamiffescossissipit'], ['ffeco', 'coffee'], ['cdde', 'coffee'], ['fffeco', 'coffee'], ['sisss', 'siiss'], ['anagraracescmarganadeiscarmmiffescossissipi', 'anagraracecarmmiffescossissipi'], ['anagraracescmarganadeiscarmmiffescossisisipi', 'anagraracecarmmiffescossissipi'], ['ntonamiffescossissipithbfffenany', 'nthbfffenany'], ['python', 'nyth'], ['scmarganadeis', 'scmarganadeis'], ['oleelh', 'olelh'], ['racanagramecar', ''], ['racanagrameeca', 'mississispi'], ['cmissipssispide', 'cmississispide'], ['nabb', 'nab'], ['misracanagramecarsissispi', 'mississispi'], ['misracanagramecarsissispi', 'mississiispi'], ['coffecoffeemississpisianagrams', 'siss'], ['mississipi', 'mississmisracanagramecarsissispiipi'], ['pyammscdeisiprogrthon', 'mississippi'], ['coffee', 'coffee'], ['sisssonamississipit', 'siis'], ['hhelnythyo', 'olelh'], ['mississipi', 'mississmisracanagramecarsisssispiipi'], ['coffeemississpisis', 'ssmarganaaffolelhecois'], ['marganaaffolelheco', 'racanagrameeca'], ['hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['abcdefghijklm', 'njkl'], ['lmno', 'onom'], ['abcd', 'cdab'], ['powerful', 'furpowl'], ['abcdefghijklmnopqrstuvwxyz', 'yzabcdefghijklmnopqrstuvwx'], ['abcdefg', 'gabc'], ['manipulation', 'ationmani'], ['logarithmic', 'thmicgloa'], ['thmicgloa', 'thmicgloa'], ['thmicgloa', 'othmicgloa'], ['onom', 'onom'], ['onnom', 'onom'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abcdefghijklm', 'njknjkl'], ['lthmic', 'thmicgloa'], ['abcdefghijklm', 'njkononm'], ['abcdefghijklm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abcdefghijklm', 'thmicgloagabc'], ['hijklm', 'njknjkl'], ['oonom', 'thmicgloagabc'], ['thmicgl', 'othmicgloa'], ['abecdefg', 'abcdefg'], ['oonom', 'oonom'], ['cdb', 'abcd'], ['logarithmic', 'cdb'], ['njknjkjl', 'njknjkl'], ['onnom', 'lthmic'], ['manipulation', 'thmicgloagabc'], ['abthmicgloacdefghijklm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['oonom', 'njknjkl'], ['abcdefghijklm', 'abcdefghijklm'], ['logarithmic', 'oonom'], ['manipulation', 'oonom'], ['abcdlthmicefg', 'gabc'], ['powerful', 'thmicgloa'], ['ationmani', 'ationmani'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['othmicgloa', 'ationmaninom'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abcd', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['cdb', 'abdcd'], ['powerful', 'njknjkl'], ['abecdefg', 'vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'onom'], ['ationmanninom', 'ationmanninom'], ['lmono', 'onom'], ['cdab', 'cdab'], ['yzabcdefghijklmnopqrstuvwx', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzderful'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['cda', 'ationmani'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'ationmaninom'], ['abcdefghijklm', 'abecdefg'], ['furpowl', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['hijklm', 'abcdefghijklm'], ['thmicgloa', 'abthmicgloacdefghijklm'], ['oonom', 'njknjk'], ['lmono', 'lmono'], ['cda', 'njknjkl'], ['cddb', 'abdcd'], ['manpipulation', 'ationmani'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'abationmaninomecdefg'], ['ationmanninom', 'aionmanninom'], ['aionmanniino', 'aionmannino'], ['thicgloanjkothmicgloanjkl', 'thmicgloanjkotthmicgloagabccgloanjkl'], ['thmicgl', 'powerful'], ['manpipulacdation', 'ationmani'], ['onnom', 'logarithmic'], ['abcdefghijklmnopqrstuvwxyz', 'njknjkl'], ['onnom', 'onnom'], ['hijklm', 'ononom'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaacaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['njknjkl', 'njknjkl'], ['abcdefghijkllmonom', 'abcdefghijkllmonom'], ['gabc', 'gabc'], ['abationmaninomecdefg', 'onom'], ['abcdefg', 'abcdefg'], ['cdbb', 'abcd'], ['thmicgloanjkotthmicgloagabccgloanjkl', 'thmicgloanjkotthmicgloagabccgloanjkl'], ['cdb', 'cdb'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb', 'cdb'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['hithicgloanjkothmicgloanjkljklm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abcdlthmicefg', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdc'], ['thmicgl', 'powerfabthmicgloacdefghijklmul'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abcdefghijklm'], ['bbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderful', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderful'], ['abcdefghlijklmnopqrstuvwx', 'njknjkl'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabc'], ['abwcdefghijklmnopqrstuvwxyz', 'yzabcdefghijklmnopqrstuvwx'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['thmicgloa', 'lthabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaamic'], ['abthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcccccbbaothmiccgloaaacccabcdcbbaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'oonom'], ['abcdefghijlm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['cdab', 'cbdab'], ['manpipulacdation', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['njkononm', 'njkononm'], ['abecdefg', 'abccdefg'], ['abwcdefghijklmnopqrstuvwxyz', 'njkononm'], ['dcdb', 'cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['dcdb', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['lthmicthmicgl', 'thmicgloagabc'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abcdefghijklm'], ['aionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'ationmtann'], ['aionmanninom', 'onom'], ['abcd', 'cdaaionmanniino'], ['abcdefghijlm', 'manipulation'], ['adbcd', 'ababthmicgloacdefghijklmcd'], ['abwcdefghijcklmnopqrsthuvwxyz', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['vnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'hijklabationmaninomecdefgm'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'abc'], ['aaionmanninotii', 'aaionmanninotii'], ['gabc', 'abdcd'], ['abbcd', 'yzabcdefghijklmnopqrstuvwx'], ['bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'njknjkl'], ['njknjkjl', 'ationmani'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'aabationmaninomecdefgtionmaninom'], ['bbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabc', 'bbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabc'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzderful', 'bbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabc'], ['furpowol', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg', 'abcdltabcdefghijklmnopqrstuvwxyzhmicefg'], ['njkl', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc'], ['thmicgl', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabc'], ['yzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwx', 'yzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwx'], ['njknjkjl', 'lthmicthmicgl'], ['oonooom', 'njknjk'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['powerful', 'furporwl'], ['dabbcd', 'yzabcdefghijklmnopqrstuvwx'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'lmno'], ['cddb', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['acbbbcd', 'abbbcd'], ['bbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'ationmanninom'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['othmicgloa', 'othmicgloa'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['abcdefghijklmnopqaionmanninorstuvwxyz', 'njknjkl'], ['hijklm', 'hijklm'], ['hijkl', 'ononom'], ['lthmic', 'ationmani'], ['abcdefghijlm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['thmicgloanjkotthmicgloagabccgloanjkl', 'thmicglbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcoanjkotthmicgloagabccgloanjkl'], ['oonm', 'oonm'], ['cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbotchmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb', 'cbdb'], ['abcudefghlijklmnopqrstuvwx', 'abcudefghlijklmnopqrstuvwx'], ['ationmtann', 'cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbotchmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb'], ['abababababababababababbbbaaaaccbbaaaccccabbaaaccbaa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abcdhijklm'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'abcd'], ['nmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'ationmtann'], ['abcdefg', 'ggabc'], ['furpowl', 'abationmaninomecdefg'], ['bbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['manpipulation', 'ationman'], ['abcdefghijlm', 'abcd'], ['njkl', 'hijklm'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['aionmannino', 'manipulation'], ['abcdefghijklmnopqaionmanninorstuvwxyz', 'njadbcdknjk'], ['hijklm', 'bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncbbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg', 'abcdltabcdefghijklmnopqrstuvwxyzhmicgabcfg'], ['manpipualation', 'ationman'], ['ationmaninom', 'furpowl'], ['manpipualation', 'yzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwx'], ['abbcbd', 'yzabcdefghijklmnopqrstuvwx'], ['cdab', 'njknjkl'], ['antionmani', 'ationmani'], ['abcdefghijklmnopqrstuvwxyz', 'njknjk'], ['abcadefghijklm', 'cdab'], ['aionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'furpowl'], ['ationmanninom', 'ationnninom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicglocaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['gabcvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'gabc'], ['abcdefghijklmnopqrstuvwxyz', 'abcdefghijklmnopqrstuvwxyz'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['bbbaaaaccbbaaaccccabbaaacccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['njknjkmanipulation', 'gabcvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm'], ['ationmani', 'ationmanninom'], ['njadbcdknjk', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['abcdefghijkllmonom', 'abcdefghijkll'], ['aionmannino', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaaicgloaaaccccbbaaabc'], ['abc', 'abc'], ['ationnninom', 'abthmicgloacdefghijklm'], ['ababthmicgloacdefghijklmcd', 'abcdltabpcdefghijklmnopqrstuvwxyzhmicefg'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd', 'thmicgloa'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihnbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['abcdefghijlm', 'njkononm'], ['adbcd', 'abcdefghijlm'], ['abcdefghijklm', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicglothmicgloabaothmaicgloaaaccccbbaaabcderful'], ['powerfabthmicgloacdefghijklmul', 'vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaanmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc'], ['thmicgloa', 'thicgloanjkothmicgloanjkl'], ['thimicgloa', 'othmicgloa'], ['abcadefghijklm', 'dcdab'], ['aaionmanninotii', 'cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb'], ['ationnninom', 'vnzrhmweyyvvucserwzggaionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmunqinzqkihncxxfchabcdaefghijklmuxjvlquvdnxliraabcdinugnaolmshzd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbblaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['manipation', 'ationmani'], ['bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'njknjabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaakl'], ['manpipulacdation', 'njkl'], ['manipulation', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['thmicmgloa', 'abthmicgloacdefghijklm'], ['ononom', 'ononom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'abbcbd'], ['lthmicdac', 'ationmani'], ['thmigcgloa', 'thmicgloa'], ['furpornjknjkwl', 'furpowl'], ['abcdefcdaaionmanniinoghijklm', 'abcdefcdaaionmanniinoghijklm'], ['ithmicgloanjkotcbdabmicgloagabccgloanjkl', 'thmicgloanjkotthmicgloagabccgloanjkl'], ['abcdefghijklmnopkqrstuvwxyz', 'njknjkl'], ['abwcdefghijcklmnopqrsthuvwxyz', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdcabwcdefghijcklmnopqrsthuvwxyz'], ['abcdefhijklm', 'abcdefghijklm'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'hijklabationmaninnomecdefgm'], ['hijklabationmaninomecdefgm', 'abcdefghijlm'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghiklm', 'abcdefghijklm'], ['abcadefghijklm', 'hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr'], ['abcd', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihnbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd'], ['abcdceffg', 'ggabc'], ['aionmanninom', 'aihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznronmanninom'], ['manpipulacdation', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['cbdb', 'cbbbacccbbaothmaicgloaaaccccbbaaabcdb'], ['hijkl', 'njkononm'], ['ationmtann', 'ationmani'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaacabcdefghijkllmonomaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['abkwcdefghijcklmnopqrsthuvwxyz', 'abwcdefghijcklmnopqrsthuvwxyz'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccationnninombothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['thl', 'thmicgl'], ['abcdefghijklmnopqrstuvwxyz', 'njknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm'], ['aionmanninom', 'abcdefghijlm'], ['cbdab', 'cbdab'], ['ltbbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabchmic', 'ationmani'], ['aaionmanni', 'aaionaionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmmanninotii'], ['ccbbbacccbbaothmaicgloaaaccccbbaaabcdbda', 'abcdefghijklmnopkqrstuvwxyz'], ['abcdefghijlthlm', 'manipulation'], ['cbdab', 'cdab'], ['thmiacgloa', 'abthmicgloacdefghijklm'], ['abcdefghijklmnopqrstuvwxyz', 'yzabcdefghijklmnopqrstuvwbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabcx'], ['lthabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaamic', 'lthabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaamic'], ['vnzrhmweyyvvucserwzggunqinzqnkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqnkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd'], ['ationnninom', 'thmigcgloa'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abecdbefg'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggthmicgloagabcunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abecdbefg'], ['bbbaaaaccbbaaaccccabbaaacccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'lmono'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'thmicgloanjkotthmicgloagabccgloanjkl'], ['powerful', 'fpurpowl'], ['njabcdefghijklmnopkqrstuvwxyzknjkl', 'njknjkl'], ['abcdefghijlm', 'thmicgl'], ['abijlm', 'thmicgl'], ['njadbcdknjk', 'abcdefghlijklmnopqrstuvwx'], ['onnom', 'lthmabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaaic'], ['manpipualation', 'thmicmgloa'], ['abcudefghlijklmnopqrstuvwx', 'acbbbcd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom', 'ationman'], ['aionmanninomationmtann', 'cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbotchmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb'], ['hmicgloa', 'thmicgloa'], ['thmi', 'thmicgl'], ['thmicglbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcoanjkotthmicgloagabccgloanjkl', 'cbbbacccbbaothmaicgloaaacccdb'], ['abdcbd', 'thmicgloa'], ['lomno', 'lomno'], ['aioonmannino', 'manipulation'], ['thmicmmgloa', 'thmicmgloa'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['njknjkabcdefghijkllmdonom', 'abcdefghijkllmonom'], ['aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom', 'atiodabbcdnman'], ['llthmicdac', 'lthmicdac'], ['thimicgyzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwxloa', 'thimicgloa'], ['cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'cdb'], ['manipulation', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlltbbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihnrcxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabchmicirainugnaolmshzd'], ['abcdltabcdefghijklmnopqrstuvwxyzhmicefg', 'lmono'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccatiodabbcdnmanbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg', 'abcdltabcdefghijklmnopqrstuvwxyzhmicefg'], ['cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb', 'cbbbacccbbaothmaicgloaaacccdb'], ['njnknjkononmnjk', 'njnknjk'], ['thmiacgloa', 'aationmaninomcbbbcd'], ['ationnninom', 'njknjkl'], ['llthmicdaationmtannc', 'llthmicdac'], ['bbbaaaaccbbaaaccccabbaaacccccbbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconom'], ['bbbaaaaccbbaaaccccabbbaaaccccccbbzderfulbaionmanninombaaabc', 'bbbaaaaccbbaaaccccabbaaaccccccbbzderfulbaionmanninombaaabc'], ['njadbcdknjk', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbaaaccccbbaaabc'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaqbcdefghiklm', 'vnzrhmwehweyyrnilrxfziojjsvvucserwzaaionmanninotiiggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghiklm'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc'], ['opowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzderfuloonom', 'ooonom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihnbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccxxfchhuxjvlquvdnxlhirainugnaolmshzdaninomecdefgtionmaninom'], ['cbdab', 'njknjkl'], ['abcudefghlijklmnopqrstuvwxcbdab', 'njknjkl'], ['aationmaninomcbbbcdabcdefghijklmnopqrstuvwxyz', 'njknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm'], ['powerful', 'powerful'], ['bbbaaaaccbbaaaccccabbaaacccccbbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'ooonom'], ['othmicabcdefghijklmloa', 'othmicgloa'], ['antionmani', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['adbcd', 'lthmabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaaic'], ['cbbbacccbbathmaicgloaaaccccbbaaabcdb', 'abbcbd'], ['bbbaaaaionnjknjkmanipulationbaaabc', 'ationmanninom'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaafurpornjknjkwlcccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg'], ['abcdefghijklmcdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'abcdefghijklmcdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abcdltabcdefghijklmnopqrstuvwxyzhmicgabcfg', 'thmicgl'], ['gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconom', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconom'], ['hijkjlabationmaninomecdefgm', 'lthabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaamic'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'llmno'], ['cbdb', 'cdab'], ['onnom', 'lththmicmmgloaic'], ['abcdefghijklmcdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'gabrcvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm'], ['gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdc', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccatiodabbcdnmanbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg'], ['abcd', 'ccdab'], ['cddab', 'cddab'], ['cbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbotchmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcdb', 'abcdefghijklmnonjknjkabcdefghijkllmdonompqrstuvwxyz'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicglocaaaccccbbaaabc', 'aionomanninom'], ['lthmicthmicgl', 'nmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abdcaionomanninm', 'abdcd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaanmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbcbbbacccbbathmaicgloaaaccccbbaaabcdbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc'], ['bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncbbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'ooonom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbblaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'abcdefghijkll'], ['abkwcdefghijabcdcklmnopqrsthuvwxyz', 'adbcd'], ['alam', 'abdcbd'], ['nl', 'njknjkl'], ['abcdefghijklmnopkqrstuvwxyz', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abbcd', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['manpipulacdation', 'acbbbcd'], ['vnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'oonom'], ['gabc', 'gabwcdefghijcklmnopqrsthuvwzabc'], ['ooonomonom', 'onom'], ['hijklm', 'furpowl'], ['abcdlthcmicefg', 'gabc'], ['abcd', 'abcd'], ['abcdefghijlthlm', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccabcdlthmicefgbbaaaccccbbaa'], ['thmicgl', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccboththimicgyzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwxloac'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaionmanninomationmtannaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg', 'oonom'], ['gabcvnzrhmwehweyyrnilrxfziojjsvvucserhwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'gabcvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghiklm'], ['thmi', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccatiodabbcdnmanbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg'], ['furpornjknjkwl', 'cbbbacccbbaothmaicgloaaaccccbbaaabcdb'], ['thmigcggloa', 'thmigcgloa'], ['abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg', 'abwcdefghijcklmnopqrsthuvwxyz'], ['ativnzrhmweyyvvucserwzggaionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmunqinzqkihncxxfchabcdaefghijklmuxjvlquvdnxliraabcdinugnaolmshzdonnninom', 'vnzrhmweyyvvinugnaolmshzd'], ['abcdefghijlm', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderful'], ['gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdcabwcdefghijcklmnopqrsthuvwxyz', 'abcdefghijklmcdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['thmicgl', 'thmiabcdltabpcdefghijklmnopqrstuvwxyzhmicefgcgl'], ['lthmic', 'bbbaaaaccbbaaaccccabbaaacccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['abbcbad', 'abbcbd'], ['hijkjlabationmaninomecdefgm', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccabcdlthmicefgbbaaaccccbbaa'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaanmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc'], ['bbbaaaaccbbaaaccccabbaabwcdefghijcklmnopqrsthuvwxyzcbbaaacaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaabwcdefghijcklmnopqrsthuvwxyzcbbaaacaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['furpornjknjkwl', 'njkononm'], ['abcdefghijklmnonjknjkabcdefghijkllmdonompqrstuvwxyz', 'abcdefghijklmnonjknjkabcdefghijkllmdonompqrstuvwxyz'], ['oonooom', 'oonooom'], ['yzabcdefghijklmnopqrstuvwbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabcx', 'yzabcdefghijklmnopqrstuvwbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabcx'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraixnugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['njknjkl', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc'], ['antiongabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdcmani', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['njknjkjl', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg'], ['manpvnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdipulacdation', 'njkl'], ['furbbbaaaaccbbaaaccccabbaaaccccccbbzderfulbaionmanninombaaabcpornjknjkwl', 'cbbbacccbbaothmaicgloaaaccccbbaaabcdb'], ['lthmicvnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd', 'ationmani'], ['ationmtann', 'ononooom'], ['abcudefghlijklmnopqrstuvwxcbdab', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccabcdlthmicefgbbaaaccccbbaa'], ['bbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabc', 'abcdefghijlm'], ['abcdefghijklmnopkqrstuvwxyz', 'abcdefg'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzderful', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzderful'], ['frurpowol', 'frurpowol'], ['cdab', 'cdabb'], ['ationmanni', 'ationmani'], ['dcdb', 'ationmani'], ['hmicgloa', 'thmicgabcdefgoa'], ['abcdlthmicebbbaaaaccbbthmicgabcdefgoaaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfg', 'bbbaaaaccbbaaaccccabbaaacccccbbcbbbacccbbathmaicgloaaaccccbbaaabcdbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc'], ['aionmanninocdab', 'cdab'], ['abcadefghijklm', 'cbbbacccbbaothmaicgloaaaccccbbaaabcdb'], ['thmicgloanjkotthmicgloagabccgloanjkl', 'thmicgloanjkotthmicgloagabccgloabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabkwcdefghijcklmnopqrsthuvwxyzabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcnjkl'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaaccccacbbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['l', 'njkl'], ['thmicgloanjkotthmicgloagabccgloanjkl', 'thmlicgloanjkotthmicgloagabccgloanjkl'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaqbcdefghiklmhijklm', 'vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaqbcdefghiklmhijklm'], ['njkononm', 'nmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abkwpowerfabthmdicgloacdefghijklmulcdefghijcklmnopqrsthuvwxyz', 'aabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninom'], ['abcdefghijlm', 'ltbbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabchmic'], ['lthmicthmicgl', 'lththmicmmgloaic'], ['logarithmic', 'njknjk'], ['manilpulation', 'oonom'], ['maanipulation', 'manipulation'], ['furpornjknjkwl', 'cbbbacccbbaologarithmicthmaicgloaaaccccbbaaabcdb'], ['aioonmanninom', 'obbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaacaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcnom'], ['vnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['lthbbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmicthmicgl', 'njknjkjl'], ['abcd', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['abcd', 'cdaaiino'], ['ggabc', 'abcdhijahbbcbadklm'], ['yzabcdrstuvwx', 'yzabcdrstuvwx'], ['aabecdefg', 'abccdefg'], ['ooonomonomabijlm', 'thmicgl'], ['omanipation', 'ationmani'], ['vnzrhmweeyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abcdefghijlthlm', 'ationmaninom'], ['onnom', 'lthmabababababababababababbbbaaaaccbbaaaccccabbaaacccccaabcdefghijklmnopqrstuvwxyzbbaaaaccccbbaaaaccccbbaaaccccbbaaic'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraixnugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraixnugnaolmshzd'], ['on', 'onnom'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjgnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'abecdbefg'], ['thmigcggloa', 'bbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihncbbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abcdefghijklmcdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbacbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'lthmicvnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd'], ['aioonmanninoaabationmvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninomm', 'aioonmanninom'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaabcacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'thmicgloanjkotthmicgloagabccgloanjkl'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderful', 'abbcbd'], ['bbbaaaaccbbaaaccccabbaaacccccbbcbbbacccbbathmaicgloaaaccccbbaaabcdbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaacccacbbaaabc', 'nmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['llthmicdaationmtaonnc', 'hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr'], ['vnzrhmweyyvvucserwzgguanqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmd', 'vnzrhmweyyvvucserwzgguanqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['ationmanninomanpipulationm', 'ationmanninom'], ['lthmicvnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd', 'lthmicvnzrhmweyyvvucserwzggunqinzqkihncxxfchabcdefghijklmuxjvlquvdnxlirainugnaolmshzd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['aationmaninomcbbbcd', 'vnzrhmweyyvvucserwzgguanqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmd'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaabcdefghijklmnopkqrstuvwxyz', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaabcdefghijklmnopkqrstuvwxyz'], ['abcudefghlijklmnopqrstuvwxcbdab', 'abcdefghijklmnopqaionmanninorstuvwxyz'], ['abcdefghijlthlm', 'tationmaninom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcnjadbcdknjk'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbaacaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['othmicabcdefghijklmloa', 'thimicgloa'], ['abcdefghijklm', 'njknjabcdhijklmkl'], ['njknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaathmigcggloaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'abcdefghijklmnopqrstuvwxyz'], ['abcdhijahnjknjkbbcbadklm', 'abcdhijahbbcbadklm'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicglothmicgloabaothmaicgloaaaccccbbaaabcderful', 'abcdfrurpowcdabbol'], ['thmi', 'thmabcdefghijklmnonjknjkabbbbaacaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccdefghijkllmdonompqrstuvwxyzicgl'], ['manipuabcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainugnaolmshzderfulbaionmanninombaaabcfglation', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlltbbbaaaaccbbaaaccccavnzrhmweyyvvucserwzggunqinzqkihnrcxxfchhuxjvlquvdnxlirainugnaolmshzdbbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabchmicirainugnaolmshzd'], ['abwcdefghijcklmnopqrsthuvwxyz', 'aationmaninomcbbbcd'], ['abcudefghlijklmnopqrstuvwxcdaaionmanniinocbdab', 'abcdefghijklmnopqaionmanninorstuvwxyz'], ['thmicgl', 'thmicgl'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd'], ['althmabababababababababababbbbaaaaccbbaaaccccabbaaacccccabbaaaaccccbbaaaaccccbbaaaccccbbaaic', 'cdaaionmanniino'], ['lmno', 'aaionmanninotii'], ['abdcaionomanninm', 'othmicabcdefghijklmloa'], ['abcudefghlijklmnopqrstuvwx', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccboththimicgyzabcdefghijklmnoabthmicgloacdefghihweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrmqrstuvwxloac'], ['ccdb', 'ccdb'], ['aioonmannino', 'manipoulation'], ['thmggabcicmmgloa', 'thmicmgloa'], ['ationnninnom', 'vnzrhmweyyvvucserwzggaionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmunqinzqkihncxxfchabcdaefghijklmuxjvlquvdnxliraabcdinugnaolmshzd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaanmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaanmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccccacbbaaabc'], ['njknjkjl', 'abcdlthmicebbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaacabcdcccbbaaaccccbbaaaccccbbaaaccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgoloaaaccccbbaaabcionmanninombaaabcfg'], ['ggabc', 'abcdhijahbbcbithmicgloanjkotcbdabmicgloagacbccgloanjkladklm'], ['bbbaaagunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['aionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'lmabcdefghijlmno'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'aabationmaninomecdefgtionationmanninomanpipulationmninom'], ['abcdefghijklmnopkqrstuvwxyz', 'llthmicdaationmtannc'], ['yzabcdefghijklmnopqrstuvwx', 'yzabcdefghijklmnopqrstuvwx'], ['abcdfrurpowcdaabbol', 'abcdfrabdcdurpowcdaabbol'], ['manipatiabccbadklmon', 'manipatiabcdhijahnjknjkbbcbadklmon'], ['aionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaabationmvnzrhmweyyvvucserwzggunqinzqkihnbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninomaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'furpowl'], ['vnzrhmweeyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdllthmicdaationmtaonncnaolmshzd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abbcbad', 'abationnninnomad'], ['aionmanninomationn', 'aionmanninomationmtann'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaabcacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'thmicgloanjkotthmicgloanjkl'], ['aionmanninocdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaabationmvnzrhmweyyvvucserwzggunqinzqkihnbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccxxfchhuxjvlquvdnxlirainugnaolmshzdaninomecdefgtionmaninomaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcm', 'faabationmaninomecdefgtionationmanninomanpipulationmninomwl'], ['abdcd', 'abcd'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaacmanpipulationloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc'], ['logarithmic', 'cbbbacccbbaologarithmicthmaicgloaaaccccbbaaabcdb'], ['atnionmaninom', 'ationmaninom'], ['bvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjgnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklmcccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjgnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklmcccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['cbd', 'cdab'], ['gabc', 'gabcvnzllthmicdacrhmwehweyyrnilrxfziojjsvvucserhwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghklm'], ['aionmananinocdab', 'cdab'], ['thmicgloagabc', 'ationmani'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzaaionmanninotiiggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghiklm', 'njknjkl'], ['bbbcaaaaccbbaaaccccabbaaacccccbbalthmicthmicglaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'bbbcaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'lomno'], ['powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxluirainumanipulationzderful', 'powvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmainjknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmcgloaaaccccbbaaabcderful'], ['lthmic', 'lthaionmanninommic'], ['bbbaaagunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabc'], ['vnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirjainugnaolmshzd'], ['atioanmanninomanpipulationm', 'abcdcefffg'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbblaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabc', 'bbbaaaacbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbaionmanninombaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccnjknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbfurbbbaaaaccbbaaaccccabbaaaccccccbbzderfulbaionmanninombaaabcpornjknjkwlbaothmicgloaaaccccbbaaabcmccbbaaaccccbbaaacccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccnjknjkaionmanninocdbbbbaaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmccbbaaaccccbbaaacccacbbaaabc'], ['gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconom', 'thmigcgloa'], ['thmigcgloa', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconom'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'ccdb'], ['abbcd', 'vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraixnugnaolmshzd'], ['furpowowl', 'furpowowl'], ['abcdefghijklmnopqrstuvtwxyz', 'yzabcdefghijklmnopqrstuvwx'], ['dcdb', 'gabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraiznugnaolmshzdc'], ['cbbdab', 'obbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaacaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcnom'], ['bbbaaaaccbbaaaccccabbaaacccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdbaaaccccbbaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaacmanpipulationloaaaccccbbaaabc', 'aabationmaninomecdefgtionationmanninomanpipulationmninom'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaacccacbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccabbaaaccccbbaaacccacbbaaabc'], ['gabcvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdcddbnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklm', 'thmicgloagabc'], ['lthbbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmicthmicgl', 'lthbbbaaaaccbbaaaccccabbaaaccccbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmicthmicgl'], ['atiaonmani', 'ationbbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmani'], ['bbbaaaaccbbaaaccccabbaaacccccccbbaaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['onomm', 'onombvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjgnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdabcdefghijklmcccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['bbbaaaaccccbbaaaaccccbbanaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmmanpipulationicgloaaaccccbbaaabc'], ['vnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquhvdnxlirabbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaabcacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcinugnaolmshzd', 'thmicgloanjkotthmicgloanjkl'], ['cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'ationbbbaaaaionmanninomaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcmani'], ['abbcd', 'njadbcdknjk'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'cbbdab'], ['abecdefmag', 'abthicgloanjkothmicgloanjklccdefg'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'hijklagm'], ['bbbaaaaccbbaaaccccabbaaacccccpowvnzrhmweyyvvucserwzggunqinzqkabcdefghijklmnopqrstuvwxyzihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccpowvnzrhmweyyvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmaicgloaaaccccbbaaabcderfulbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc', 'cdbbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabc'], ['abccd', 'abccd'], ['manpvnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdirpulacdation', 'manpvnzrhmwehweyyrnilrxfziojjsvvuvcserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdirpulacdation'], ['powerful', 'agabvnzrhmwehweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznryyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdconomtionma'], ['thmimanpipulacdationcmmgloa', 'thmicmgloa'], ['ationmannbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaccccbbaaabcnjadbcdknjkinom', 'nmtanbbbaaaaccbbaaaccccabbaaacccccbbaaabbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaabcaccccbbaaaaccccbothmicgloabaaaccccbbaaaccccbbaothmicgloaaaaabc'], ['', 'abc'], ['abc', ''], ['hello', 'loh'], ['ab', 'ba'], ['abcde', 'eabcd'], ['aaaaa', 'a'], ['abcd', 'dabc'], ['abcd', 'dcba'], ['abcabc', 'cabcab'], ['abcdefghijklm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['abcdefghijklm', 'njjkl'], ['njkl', 'njkl'], ['powferful', 'furpowl'], ['powferful', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa', 'gabc'], ['gabc', 'gabmanipulationc'], ['abcdefghijklm', 'abcdefgjklm'], ['onom', 'furpowl'], ['njkabcdefgjklml', 'njkabcdefgjklml'], ['abcdefghijklm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['ationmani', 'yzabcdefghijklmnopqrstuvwx'], ['abcdefgjklm', 'njjkl'], ['thmicghloa', 'thmicgloa'], ['abcdefghijklm', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['thmvnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzdicghloa', 'thmicghloa'], ['abcdeefg', 'abcdeefg'], ['yzabcdefg', 'yzabcdefg'], ['yzabcdefghijklmnopqrstuvwx', 'ationmani'], ['yzabcdefg', 'furpowl'], ['yzabcdefg', 'abcdefghijklm'], ['logarithmic', 'logarithmic'], ['furabcdefghijklmpowl', 'furpowl'], ['njkl', 'nljkl'], ['anmani', 'ationmani'], ['logiarithmic', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['thmicghloagabc', 'gabc'], ['abcdnljklefg', 'abcdefg'], ['aebcdefg', 'yzabcdefg'], ['njlogiarithmickl', 'njkl'], ['furabcdefghijklmpowl', 'abcdefghijklmnopqrstuvwxyz'], ['abcdefghijklm', 'yzabcdefg'], ['abicdefghijklm', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation', 'manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation'], ['abcdefghijklm', 'powerful'], ['gabmanipultationc', 'gabmanipulationc'], ['abcdefghijklm', 'abcdefghijkanmanilm'], ['gabmanilmnopulationc', 'gabmanipultationc'], ['thmicgloa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['knjkabcdefgjkclml', 'njkabcdefgjkclml'], ['abcdnljkleationmanifg', 'abcdnljkleationmanifg'], ['powerful', 'abcdeffghijklm'], ['abcdefm', 'njkl'], ['anmani', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['abcd', 'thmicghloa'], ['ul', 'ul'], ['nnjkl', 'njkl'], ['gabmanipulationc', 'gabmanipaulationc'], ['mthmicgloa', 'nnjkl'], ['gabmanipulationc', 'gabmanipulationc'], ['abcdefghijklm', 'abcdnljklefg'], ['nanmani', 'ationmani'], ['abcdefghijklm', 'abcdefm'], ['gabcnjkl', 'njkl'], ['anmanai', 'anmanai'], ['gabmanilmnopulationc', 'gabmanipultatioc'], ['abcdg', 'abcdeefg'], ['gabmanipaulationc', 'gabmanipaulationc'], ['furpowl', 'furpowl'], ['abcdefm', 'mthmithmicghloagabccgloa'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'yzabcdefghijklmnopqrstuvwx'], ['njkabcdefgjklml', 'powerful'], ['furpowl', 'furpownnjkll'], ['abcdefghijklm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjkl'], ['abklm', 'abcdefgjklm'], ['abababababababababababbbbaaaaccbbaaaccccabbabaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa'], ['abcdefam', 'abcdefam'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjkl', 'atioanmaninmuli'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa', 'powferful'], ['anmanai', 'ul'], ['abcdefghijklm', 'abcanmanidefghijklm'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'furpowl'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'powerful'], ['abcdefghijkanmanilm', 'abcdefghijkanmanilm'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcabcdefmlfg', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg'], ['gabmanipaulationc', 'abcdnljklefg'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaacklfg', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg'], ['njkabcadefgjklml', 'njkabcdefgjklml'], ['powferful', 'powferful'], ['nj', 'njkl'], ['nnjkl', 'thmicgloa'], ['abcdeefg', 'abcdthmicghloagabceefg'], ['abcdefghijklm', 'abcdefghhijkanmanilm'], ['yzabcfdefg', 'yzabcdefcg'], ['abcdefghhijkanmanilm', 'anmanai'], ['abcdefgabklmhijklm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'gabmanipultatioc'], ['logiarithmic', 'gabmanipulationc'], ['nj', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaacklfg'], ['gabmanonc', 'gabmanonc'], ['gabmanipulltatioc', 'gabmanipultatioc'], ['thmicghloagabc', 'abcdnljklepowerfulfg'], ['gabmanipultatioc', 'ationmani'], ['abcdefm', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['abcdefgabklmhijklm', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['yzabcdefg', 'furpabcanmanidefghijklmowl'], ['abcdefghijabcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'powerfunj'], ['abcdefghijklm', 'abababababacccbbaaaccccbbaa'], ['nnjgabmanipultationnck', 'nnjgabmanipultationck'], ['nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrationck', 'nnjgabmanipultationnck'], ['furpownnjkll', 'powerful'], ['yzabcdefcg', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['thmicghloa', 'yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx'], ['cdab', 'manipulatilon'], ['furpowull', 'njkabcdefgjklml'], ['hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr', 'manipulatilon'], ['anmaini', 'anmani'], ['abcdefggabchijklm', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['gabcnjkl', 'manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation'], ['onomnjkabcdefgjklml', 'lmno'], ['yzabcdefg', 'manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation'], ['anmaini', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmani'], ['nnjkl', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg'], ['gabcnjkl', 'gabc'], ['aabcdefghijkanmanilmbcdefghijklm', 'abcdefghijklm'], ['ationmani', 'manipulatilon'], ['gabmanipultatioc', 'ationmanni'], ['gabmanonc', 'gabmanipultatioc'], ['njkabcdefgjklml', 'abcdefghijkanmanilmm'], ['nnjgabmanipultationnck', 'nnjgabmanipultationnck'], ['gabmanipulltatgioc', 'thmicghloa'], ['nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcbjkl', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['logarithmic', 'thmicglofurpowulla'], ['logaritic', 'logarithmic'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccmanipulationbbaaabcjklanmani', 'njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmani'], ['nnnnjgabmanipultationckjkl', 'mthmicgloa'], ['njkabcdefgjkclml', 'njkabcdefgjkclml'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccmanipulationbbaaabcjklanmani', 'powerfulnjkl'], ['ul', 'uationmannil'], ['cgabc', 'gabnbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmanic'], ['gabmanipulationc', 'gabcdnljklepowerfulfgabmanipulationc'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabc', 'gabmanipultatioc'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa', 'njkl'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccmanipulationbbaaabcjklanmani', 'abklm'], ['abcdefam', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkl'], ['abcdefghijklmnopqrstuvwxyz', 'njkabcdefgjkclml'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg', 'nnjkl'], ['abcdg', 'abcdeeabcdfg'], ['anmanni', 'nbbbaaaaccbaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['abcdefghijgklm', 'abcdefghijklm'], ['gabmanipultatioc', 'anmanai'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr'], ['cdabb', 'manipulatilon'], ['abicdefghijkmlm', 'anmaini'], ['nnjgabmanipultationck', 'abcdefghijklm'], ['acgabacfg', 'acgabcfg'], ['abcdthmicghloagabceefg', 'abcdthmicghloagabceefg'], ['logiarithmic', 'cgabc'], ['cdabb', 'abababababababaaaccccbbaccccbbaa'], ['gabc', 'gabmabnipulationc'], ['powrfunj', 'powrfunj'], ['anmayzabcdefcgii', 'anmaini'], ['njlogiarithmickl', 'yzabcdefg'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccmanipulationbbaaabcjklanmani', 'njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccmanipulationbbaaabcjklanmani'], ['gabmanipulltatgioc', 'hmicghloa'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa', 'abababababacccbbaaaccccbbaa'], ['gabcnjkl', 'atioanmaninmuli'], ['logiarithmic', 'abkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm'], ['nnjkl', 'thmicgloaabkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm'], ['logarithmic', 'thabcdefghhijkanmanilmmicgloa'], ['abcdthmicghloagabceefg', 'abcdefghijkanmanilmm'], ['njknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmani', 'gabmanipulationc'], ['gabmanipulaanmannitionc', 'gabmanipulationc'], ['nnjkl', 'njjkl'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabc', 'gabmanipultatioccgabc'], ['abababababababaaacccccbbaccccbbaa', 'abababababababaaacccccbbaccccbbaa'], ['alogiarithmic', 'logiarithmic'], ['njknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmani', 'powerful'], ['abcdefa', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkl'], ['thmicghloagabc', 'abcdnljklepowebrfulfg'], ['njkabcdefgjklml', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['nnjgabababababababaaaccbaationnck', 'nnjgabmanipultnbbbaabaaccbaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklationnck'], ['', 'ul'], ['nnjgabmanipulthgnaolmshzhdwmnmvznrationck', 'nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrationck'], ['furpownnjkll', 'furpownnjkll'], ['abcdefghabcdefghijklmnopqrstuvwxyzijklm', 'abcdefghijklm'], ['acchmicghloadabbgabacfgnjjkl', 'accdabbgabacfgnjjkl'], ['abcdnljklefg', 'gabmanipulltatgioc'], ['abcdeffghijklm', 'hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhmuxjvlquvdnxlirainugnaolmshzhdwmnmvznr'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'abcanmanidefghijklm'], ['hmicghloa', 'cgabcthmicgloa'], ['abcdefghijkjlm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjkl'], ['ulabcdeeabcdfg', 'ul'], ['anmana', 'anmanagabmanilmnopulationci'], ['ationmani', 'ationma'], ['njknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmani', 'abcanmanidefghijklmpowerful'], ['abcdefghijkanmaniabcdefmlm', 'abababababacccbbaaaccccbbaa'], ['knjkaefgjkclml', 'njkabcdefgjkclml'], ['njknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaakabcjklanmani', 'abcanmanidefghijklmpowerful'], ['abcdefghijkfurabcdefghijklmpowllm', 'abcdefghijklm'], ['abcdnljkleffg', 'abcdefg'], ['mthmithmicghloagabccgloa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaa'], ['oonom', 'furpowl'], ['yzabcdefg', 'yzabcde'], ['logiarithmic', 'nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznrationck'], ['yzabcdefg', 'acbgabcfg'], ['ul', 'ull'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbnnjgabmanipultaa', 'powferful'], ['nabcdefgnjkl', 'njjkl'], ['p', 'powferfl'], ['gabc', 'nnjkl'], ['abcdefgjklm', 'abcdefgjklm'], ['gabmanipultationc', 'gabmanipulaticdabbonc'], ['abababababaabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccabbaaaaccccbbaaccccbbaa', 'abababaababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['gabcnjkl', 'gabcnjkl'], ['acchmicghloadabbgabacfgnjjkl', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['logiaritlhmic', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbcccbbaa'], ['abcdeghijklm', 'abcdefgjklm'], ['njkmabcdefgnjkclml', 'njkabcdefgjkclml'], ['gabcnjkl', 'gnabcnjkl'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbabaaaccccbbaaaccccbbaa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbabaaaccccbbaaaccccbbaa'], ['abcdefam', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['l', 'ull'], ['abklm', 'gabmabnipulationc'], ['ul', 'abababababababababababbbbaaaaccbbaaaccccabbabaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaaull'], ['hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr', 'manilpulatilon'], ['acchmicghloadabbgabacfgnjjkl', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmntopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbabaaabcjkl'], ['yzabcdeefg', 'yyzagbcdefg'], ['anmaini', 'abababababacccbbaaaccccbbaa'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm'], ['agabmanipulltatiocbcdefa', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkl'], ['logarithmic', 'thmicgla'], ['gabcnjkkl', 'gabcnjkl'], ['manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation', 'manipabababababbabuabababababbbbaaaaccbbaaacccccbbaaulation'], ['alogiarithmic', 'alogiarithmic'], ['logarithnnjgabmanipultnbbbaabaaccbaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklationnckmic', 'logarithmic'], ['yzabcdefghijklmnopqrstvnzrhmweyycserwzggunqinzqkihnhzduvwx', 'yzabcdefghijklmnopqrstuvwx'], ['abcdefg', 'gagabmabnipulationcbc'], ['manilpulatilon', 'abcdeefg'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbbaaaaccccbbaaaccccbbaaabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['ationmani', 'aebcdefg'], ['abcdanljklefg', 'manipabababababbabuabababababbbbaaaaccbbaaacccccbbaaulation'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccgabcthmicgloacccbcccbbaa', 'gabmanipulatacgabcfgionc'], ['powerfunj', 'abcdefg'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmntopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbabaaabcjkl', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmntopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbabaaabcjkl'], ['ationmlmnoani', 'ationmani'], ['nnjgabmanipfurpownnjkllultationck', 'nnjgabmanipultationck'], ['gabmanonc', 'abcdeeabcdlogariticfg'], ['furpogabmanoncwull', 'njkabcdefgjklml'], ['nnjgnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkltationnck', 'nnjgabmanipultationanck'], ['abcanmanidefghijklm', 'abcanmanidefghijklm'], ['gjabcnjkl', 'atioanmaninmuli'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx'], ['abcdefghijkanmanilm', 'furpowull'], ['anmanii', 'anmani'], ['gabmanipaulationc', 'gabc'], ['logaritic', 'ul'], ['manipulatilon', 'manipulatilon'], ['abcanmanidefghijklm', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['anmanii', 'logiarithmic'], ['gabgc', 'gabc'], ['aebcdefg', 'yzadefg'], ['gabcnjkl', 'manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaagagabmabnipulationcbcaccccbbaaaaccccbbaaaccccbbaaulation'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccibbaaaccnnjklccbbaaabcjklefghiajklm'], ['abcdefghijkjelm', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjkl'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccibbaaaccnnjklccbbaaabcjklefghiajnbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcbjklklm', 'abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccibbaaaccnnjklccbbaaabcjklefghiajnbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcbjklklm'], ['yyzagbthmicglafg', 'yzabcdeezfg'], ['yyzagbthmicglafg', 'njkl'], ['mtulabcdeeabcdfghmithmicghloagabccgloa', 'mtulabcdeeabcdfghmithmicghloagabccgloa'], ['nbbcbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'furpowl'], ['njkabcdefgjkclml', 'uationmannil'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvpbcjkl', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['gabmanipulaanmannitionc', 'gabmanipulataionc'], ['nnnnjgapbmanipultationckjkl', 'gabcdnljklepowerfulfgabmanipulationc'], ['gabmanipulltatgioc', 'gabmanipulltatgioc'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaaccccbbbabaaaccccbbaaaccccbbaa', 'abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaaccccbbbabaaaccccbbaaaccccbbaa'], ['thmicgloa', 'abababababababababababbbbaaaabcdefgabklmhijklmaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['abababababababaaacccccbbaccccbbaapowferful', 'l'], ['abcdefghijkfurabcdefghijklmpowllm', 'abcdecgabclm'], ['nbbbaaaaccbbaaaccccabaccccbbaaaccccbbaaaccccbbaaabcjkl', 'nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['abababababaabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccabbaaaaccccbbaaccccbbaa', 'abkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm'], ['abcdefghijkanmanil', 'furpowull'], ['yzabcdefcg', 'abcdefgjklm'], ['abcdnljkleffgknjkabcdefgjkclml', 'abcdefg'], ['manipabababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaulation', 'njkabcadefgjklml'], ['aabcdefghijkanmanilmbcdefghijklm', 'abababaababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaa'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'anmanagabmanilmnopulationci'], ['abcdefklmpowllm', 'abcdefghijklm'], ['mtulabcdeeabcdfghmithmicghloagabccgloalogiarithmica', 'mtulabcdeeabcdfghmithmicgahmloagabccgloa'], ['abcdnljkleffgknjkabcdeafgjkclml', 'abcdnljkleffgknjkabcdeafgjkclml'], ['aabcdefghijkanmanilmbcdefghijklm', 'abcdefghiljklm'], ['nnjkl', 'anmanagabmanilmnopulationci'], ['abcdefgjklm', 'abcdefgjkljm'], ['yzabcfdefg', 'abababababababaaacccccbbaccccbbaa'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklfg'], ['gabcnjbkl', 'atmioationmlmnoanianmaninmuli'], ['ngabmanonc', 'gabmanonc'], ['njkabcdefgjklml', 'wpowerful'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkl', 'gabmanipultatioccgabc'], ['gagabmabnipulationcbc', 'gagabmabnipulatiabcdoncbc'], ['nnjkl', 'thmicgloaabkbbbaacaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm'], ['abababababababaaaccccbbaccccbbaal', 'abcdefghijkanmanilmm'], ['cdbb', 'cda'], ['logiarithmicacgabacfg', 'nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraainugnaolmshzhdwmnmvznrationck'], ['gabjkl', 'njkl'], ['yzabcdefghijklmnopqrstuvwx', 'njkabcdefgjklml'], ['cdbb', 'yzabcdefghijklmnopqrstuvwx'], ['logiarithmicagabmanipulatacgabcfgionccgabacfg', 'nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraainugnaolmshzhdwmnmvznrationck'], ['abababababababaaaccccbbaccccbbaal', 'abcdefghijkannjjklmanilmm'], ['mtulabcdeeabcdfghmithmicghloagabccgloa', 'powerfunj'], ['abcdefghijgklm', 'uationmannil'], ['mtulabcdeeabcdfghmithmicghloagabccgloalogiarithmica', 'nnjgabmanipulthweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxliraainugnaolmshzhdwmnmvznrationck'], ['furpownnjkll', 'furnbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjklanmanipownnjkll'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcbdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx'], ['abicdefghijkmaabcdefghijkanmanilmbcdefghijklmlm', 'abicdefghijkmaabcdgabmanipultationcefghijkanmanilmbcdefghijklmlm'], ['abababababababaaacccccbbaccccbbaa', 'mthmicgloa'], ['nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'abcdefghijkannjjklmanilmm'], ['abababababababababababbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbaccgabcthmicgloacccbcccbbaa', 'gabmanipulatacgabcfgionc'], ['atioanmaninmuli', 'abcdefghijkannjjklmanilmm'], ['abcdefghijkaanmanilmm', 'abcdefghijkanmanilmm'], ['gabmanipulcdabtatiocc', 'gabmanipulcdabtatiocc'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjabcanmanidefghijklmlqcuvdnxlirainugnaolmshzduvwx', 'yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx'], ['abababababababaaaccccbbaccccbbaal', 'aabcdefghijkanmanilmbcdefghijklm'], ['l', 'manipulatilon'], ['gabcdnljklepowerfulfgabmanipulationc', 'anmana'], ['yyzagbthmicglafg', 'yyzagbthmicglafg'], ['atiionmathmicgloa', 'atiionma'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolknjkabcdefgjkclmld'], ['abcpowerfulnjkldeghijklm', 'abcdeghijklm'], ['abcdeeabcdlogariticfg', 'om'], ['thmicgloa', 'yzabcfdefg'], ['nanmani', 'atiaonmani'], ['fuwrpowl', 'furpowl'], ['gabcnjkl', 'bgnabcnjkl'], ['acchmicghloadabbgabacfgnjjkl', 'acchmicghloadabbgabacfgnjjkl'], ['nbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'njkabcdefgjkclml'], ['gabmianipulcdabtatiocc', 'gabmanipulcdabtatiocc'], ['aabcdefghijkanmanilmbcdefghijklm', 'ul'], ['anmani', 'anmani'], ['logiaritlchmic', 'logiaritlhmic'], ['nj', 'nj'], ['ationmannfurpogabmantiionmaanoncwull', 'ul'], ['nnjgnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbcaaaccccbbaaaccccbbaaabcjkltationnck', 'abcdefghabcdefghijklmnopqrstuvwxyzijklm'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'powerfunbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvpbcjkll'], ['nbbcbbaaaaccabcdefghijklmnopqrstuvwtxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl', 'nbbcbbaaaaccabcdefghijklmnopqrstuvwtxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['ationmafurpogabmanoncwull', 'njkabcdefgjklml'], ['hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhmuxjvlquvdnxlirainugnaolmshzhdwmnmvznr', 'njkabcdefgjklml'], ['njkabcadefgjklml', 'njkabcadefgjklml'], ['abcabcdefghijklmnopqrstuvwxyzdnljklepowerfulfg', 'abcdnljklepowerfulfg'], ['abcdefghiljklm', 'thmicgla'], ['yzabcdenljkyzabcdeefglfg', 'yzabcdyzabcdefghijklmnopqrstuvwxenljklfg'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd'], ['yzabcdefghijklmnopqrstvqnzrhmweyyrnilrxfziojjsvvucserabcbdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcbdefgjklmwzggunqinzqkihncxxfchhuxjvlqatiaonmaniuvdnxlirainugnaolmshzduvwx'], ['gabcdnljklepowerfulfgabyzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserabcbdefgjklmwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwxationc', 'gabmanipulationc'], ['furpogabmanoncwull', 'yzabcfdefg'], ['logarithmic', 'manipulation'], ['hweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzhdwmnmvznr', 'knjkabcdefgjkclml'], ['bbbaaaaccbbaaaccccabbaaaccaccccbbaaabc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['vnzrhmweyyrnilrxfziojjsvvucserwzggunqinfurpowlzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzd', 'abcdeeabcdfg'], ['logarithmicabcdefggabchijklm', 'logarithmic'], ['abcpowerfulnjkldeghijklm', 'gabmanipaulationc'], ['acchmicghloadabbgabacfgnjhjkl', 'acchmicghloadabbgabacfgnjjkl'], ['abcdefghijkl', 'abcdefghijkl'], ['nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvpbcjkl', 'gabmanipulltatgioc'], ['nbbbaaaacvnzrhmweyyrnilraccccbbcaaaccccbbaaaccccbbaaabcjkl', 'abcdefam'], ['abicdefghijkmaabcdefghijkanmanilmbcdefjghijklmlm', 'abicdefghijkmaabcdgabmanipultationcefghijkanmanilmbcdefghijklmlm'], ['nbbbaaaacvnzrhmweyyrnilraccccbbcaaaccccbbaaaccccbbaaabcjkl', 'gabmianipulcdabtatiocc'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccccmanipulationbbaaabcjklanmani', 'powerfulnjkl'], ['gabmanipulaanmannitionc', 'ggabmanipulataionc'], ['powlerfulnjkl', 'powerfuulnjkl'], ['gjabcnjkl', 'nnnnjgapbmanipultationckjkl'], ['abcdefghijklmnopqrstuvwxyz', 'nnjkl'], ['abcanmeanidefghijklm', 'abcanmanidefghijklm'], ['logiaritahmic', 'abkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm'], ['gagabmabnipulatiabcdoncbc', 'abcdefghabcdefghijklmnopqrstuvwxyzijklabcanmanidefghijklmm'], ['abkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbbaaaccccbbaaaccccbbaaabclm', 'njkabcadefgjklml'], ['gabmanipaulationc', 'bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc'], ['abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccnnjklccbbaaabcjklefghijklm', 'abcdnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccibbaaaccnnjklccbbaaabcjklefghnbbcbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkliajklm'], ['thmicglanmanaoa', 'thmicgloa'], ['nbbbaaaaccbbaaaccccabaccccbbaaaccccbbaaaccccbbaaabcjkl', 'powerful'], ['yzabcdefghijklmnopqrstvnzrhmweyyrnilrxfziojjsvvucserwzggunqinzqkihncxxfchhuxjvlquvdnxlirainugnaolmshzduvwx', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcjkl'], ['njknbbbaaaaccbbaaaccccabbaaaccccccbbaaaacccncbbaaaccccbbaaaccccccmanipulationbbaaabcjklanmani', 'abkbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaacccaaccccbbaaabclm'], ['bbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaaabc', 'thmicgloa'], ['njkabcadefgjklml', 'abicdefghijkmaabcdefghijkanmanilmbcdefghijklmlm'], ['anjknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbaaaaccccbbaaaccccbbaaaccccbbaaaccccbbaakabcjklanmanibcdefghijklm', 'thmicghloagabc'], ['furpownnjkll', 'atmioationmlmnoanianmaninmuli'], ['nnnnjgabmanipultationckabcdnljkleffgknjkabcdeafgjkclmljkl', 'mthmicgloa'], ['thabcdefghhijkanmanilmmicgonomloa', 'thabcdefghhijkanmanilmmicgloa'], ['gabcnnbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmnopqrstuvwxyzccbbaaaccccbbaaaccccbbaaaccccbbaaabcabcdefmlfgjkl', 'gabcnjkl'], ['acchmicghloadabbgabacfgnjjkl', 'nbbbaaaaccbbaaaccccabbaaacccccbbaaaaccccbbaaaaccabcdefghijklmntopqrstuvwxyzccbbbaaaccccbbaaaccccbbaaaccnnjklccbabaaabcjkl'], ['anjknbbbaaaaccbbagabmanipultatiocaaccccabbaaaccccccbbacbbaaaccccbbaakabcjklanmanibcdefghijklm', 'thmicghlcgabcthmicgloaoagabc']]\n    results = [False, True, False, True, False, True, False, True, False, False, False, True, True, True, True, False, True, False, False, True, True, False, False, False, False, False, False, False, False, True, True, True, True, False, False, False, True, True, False, False, False, True, True, False, False, False, False, False, False, False, False, False, True, False, False, False, True, False, True, False, False, True, False, False, True, False, False, False, False, False, False, False, True, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, True, False, False, True, False, False, True, False, False, True, True, False, False, False, False, False, False, False, False, True, False, True, False, False, False, True, False, True, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, True, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, True, True, False, True, False, True, True, True, False, True, True, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, True, False, False, True, False, False, True, False, True, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, True, True, True, False, False, True, False, False, False, False, False, False, False, False, True, True, True, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, True, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, True, True, False, False, False, False, True, False, True, True, True, True, False, True, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, True, True, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, True, True, False, False, False, False, True, True, False, False, True, False, False, False, True, True, False, False, True, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, False, True, True, False, False, False, False, False, False, True, False, True, False, False, False, False, True, False, False, False, True, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, True, False, False, False, False, False, False, False, False, True, False, False, False, False, True, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, True, False, True, False, True, False, False, True, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, True, True, False, True, False, False, False, False, False, True, False, False, False, False, False, True, False, False, False, False, True, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, True, True, False, False, False, False, False, False, False, True, False, False, False, True, False, True, True, False, False, True, False, False, True, False, False, False, True, False, False, False, False, False, False, False, True, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n    for i, (inp, exp) in enumerate(zip(inputs, results)):\n        assertion(candidate(*inp), exp, 0)\n",
      "entry_point": "cycpattern_check",
      "complete_code": "\ndef cycpattern_check(a , b):\n    \"\"\"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True\n\n    \"\"\"\n\n    if a == b:\n        return True\n    if b == \"\":\n        return True\n    for i in range(0, len(b)):\n        if b[i:] + b[:i] in a:\n            return True\n    return False\n\n"
    },
    "execution_info": {
      "max_mutations_per_operator": 10,
      "total_operators_tested": 46,
      "operators_with_mutations": 9,
      "execution_timestamp": "2025-08-01T16:00:47.939414"
    }
  }
}